<Page
    navigatingTo="onNavigatingTo"  
    xmlns="http://schemas.nativescript.org/tns.xsd">

    <ActionBar flat="true" backgroundColor="#A9A9A9" class="action-bar">
        <!-- 
        Use the NavigationButton as a side-drawer button in Android
        because ActionItems are shown on the right side of the ActionBar
        -->
        <NavigationButton ios:visibility="collapsed" icon="res://menu" tap="onDrawerButtonTap"></NavigationButton>
        <!-- 
        Use the ActionItem for IOS with position set to left. Using the
        NavigationButton as a side-drawer button in iOS is not possible,
        because its function is to always navigate back in the application.
        -->
        <ActionItem icon="res://navigation/menu" 
            android:visibility="collapsed" 
            tap="onDrawerButtonTap"
            ios.position="left">
        </ActionItem>
        <Label class="action-bar-title" text="Search Articles"></Label>
    </ActionBar>

    <StackLayout class="page-content">
        <FlexboxLayout alignItems="center" justifyContent="center" height="70" backgroundColor="#A9A9A9">
            <Label color="white" style="text-align:center" text="Search... anything"></Label>
        </FlexboxLayout>

<TabView androidSelectedTabHighlightColor="#A9A9A9" id="tabViewContainer">
    <TabViewItem title="Past Searches">
        <StackLayout>
             <ScrollView>
                <StackLayout height="100%">
                    <Label color="black" text="no past searches" textWrap="true" class="m-15" />
                </StackLayout>
            </ScrollView>
        </StackLayout>
    </TabViewItem>
    <TabViewItem title="Saved Searches">
        <StackLayout>
             <ScrollView>
                <StackLayout height="100%">
                    <Label color="black" text="no saved searches" textWrap="true" class="m-15" />
                </StackLayout>
            </ScrollView>
        </StackLayout>
    </TabViewItem>
</TabView>

    </StackLayout>
</Page>
